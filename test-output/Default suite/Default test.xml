<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="ITSG000186-MAC.local" ignored="0" name="Default test" tests="1" failures="0" timestamp="09 Jan 2018 06:13:28 GMT" time="22.848" errors="0">
  <testcase name="@BeforeMethod setUp" time="22.669" classname="base.TestBase">
    <failure type="org.openqa.selenium.WebDriverException" message="An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 22.42 seconds
Build info: version: &amp;apos;2.53.1&amp;apos;, revision: &amp;apos;a36b8b1cd5757287168e54b817830adce9b0158d&amp;apos;, time: &amp;apos;2016-06-30 19:26:09&amp;apos;
System info: host: &amp;apos;ITSG000186-MAC.local&amp;apos;, ip: &amp;apos;10.2.42.177&amp;apos;, os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;10.13.2&amp;apos;, java.version: &amp;apos;1.8.0_111&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device. (WARNING: The server did not provide any stacktrace information)Command duration or timeout: 22.42 secondsBuild info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'System info: host: 'ITSG000186-MAC.local', ip: '10.2.42.177', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.2', java.version: '1.8.0_111'Driver info: io.appium.java_client.android.AndroidDriverat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)at utility.CommonUtils.getAndroidDriver(CommonUtils.java:124)at base.TestBase.setUp(TestBase.java:38)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:451)at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)at org.testng.internal.Invoker.invokeMethod(Invoker.java:516)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="login" time="0.0" classname="testcases.androiddax.LoginTest">
    <skipped/>
  </testcase> <!-- login -->
</testsuite> <!-- Default test -->
